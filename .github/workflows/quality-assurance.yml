name: Quality Assurance & Testing

# Required Secrets:
# - RENDER_TOKEN: Token for deploying to Render platform
#   Set this in your repository secrets (Settings > Secrets and variables > Actions)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # KÃ¶r dagligen kl 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'
  COVERAGE_THRESHOLD: '80'

jobs:
  # Frontend Quality Checks
  frontend-quality:
    name: Frontend Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Lint check
        working-directory: frontend
        run: npm run lint
        
      - name: Type check
        working-directory: frontend
        run: npm run type-check
        
      - name: Run tests
        working-directory: frontend
        run: npm run test:run
        
      - name: Test coverage
        working-directory: frontend
        run: npm run test:coverage
        
      - name: Performance tests
        working-directory: frontend
        run: npm run test:performance
        
      - name: Accessibility tests
        working-directory: frontend
        run: npm run test:accessibility
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: frontend/coverage/lcov.info
          flags: frontend
          name: frontend-coverage

  # Backend Quality Checks
  backend-quality:
    name: Backend Quality
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
          
      - name: Install dependencies
        working-directory: backend
        run: npm ci
        
      - name: Lint check
        working-directory: backend
        run: npm run lint
        
      - name: Run tests
        working-directory: backend
        run: npm test
        
      - name: Test coverage
        working-directory: backend
        run: npm run test:coverage
        
      - name: Security audit
        working-directory: backend
        run: npm audit --audit-level=moderate
        
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: backend/coverage/lcov.info
          flags: backend
          name: backend-coverage

  # Integration Testing
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [frontend-quality, backend-quality]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Install backend dependencies
        working-directory: backend
        run: npm ci
        
      - name: Run basic integration check
        run: |
          echo "Running integration checks..."
          cd frontend && npm run type-check
          cd ../backend && npm run lint
          echo "Integration checks completed successfully"

  # Performance Testing
  performance-tests:
    name: Performance Tests
    runs-on: ubuntu-latest
    needs: [frontend-quality]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
          
      - name: Install dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Build application
        working-directory: frontend
        run: npm run build
        
      - name: Run performance tests
        working-directory: frontend
        run: npm run test:performance
        
      - name: Performance audit
        working-directory: frontend
        run: npm run performance:audit

  # Security Scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          
      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci
        
      - name: Install backend dependencies
        working-directory: backend
        run: npm ci
        
      - name: Run security audit
        run: |
          echo "Running security audit..."
          cd frontend && npm audit --audit-level=moderate || true
          cd ../backend && npm audit --audit-level=moderate || true
          echo "Security audit completed"

  # Quality Gate
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    needs: [frontend-quality, backend-quality, security-scan]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Quality check summary
        run: |
          echo "## Quality Assurance Summary" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Frontend: Lint, Type check, Tests" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Backend: Lint, Tests" >> $GITHUB_STEP_SUMMARY
          echo "âœ… Security: Audit completed" >> $GITHUB_STEP_SUMMARY
          echo "ðŸš€ All quality checks passed!" >> $GITHUB_STEP_SUMMARY

# Note: Cache configuration is handled within individual jobs using actions/setup-node@v4
